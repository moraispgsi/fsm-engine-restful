{
  "_args": [
    [
      {
        "raw": "retry-as-promised@^2.0.0",
        "scope": null,
        "escapedName": "retry-as-promised",
        "name": "retry-as-promised",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\Ricardo Morais\\Desktop\\INSTICC\\PFC\\Projeto final\\FSM\\FSM Engine RESTful\\fsm-engine-restful\\node_modules\\sequelize"
    ]
  ],
  "_from": "retry-as-promised@>=2.0.0 <3.0.0",
  "_id": "retry-as-promised@2.2.0",
  "_inCache": true,
  "_location": "/retry-as-promised",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/retry-as-promised-2.2.0.tgz_1477652948471_0.21952940267510712"
  },
  "_npmUser": {
    "name": "mickhansen",
    "email": "mick.kasper.hansen@gmail.com"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "retry-as-promised@^2.0.0",
    "scope": null,
    "escapedName": "retry-as-promised",
    "name": "retry-as-promised",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sequelize"
  ],
  "_resolved": "https://registry.npmjs.org/retry-as-promised/-/retry-as-promised-2.2.0.tgz",
  "_shasum": "b0463d7fd3cf5b2fed64500ab6e8b8a49c5b8e6c",
  "_shrinkwrap": null,
  "_spec": "retry-as-promised@^2.0.0",
  "_where": "C:\\Users\\Ricardo Morais\\Desktop\\INSTICC\\PFC\\Projeto final\\FSM\\FSM Engine RESTful\\fsm-engine-restful\\node_modules\\sequelize",
  "author": {
    "name": "Mick Hansen",
    "email": "maker@mhansen.io"
  },
  "bugs": {
    "url": "https://github.com/mickhansen/retry-as-promised/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.6",
    "cross-env": "^3.1.2",
    "debug": "^2.2.0"
  },
  "description": "Retry a failed promise",
  "devDependencies": {
    "chai": "^2.3.0",
    "chai-as-promised": "^5.0.0",
    "mocha": "^2.2.5",
    "moment": "^2.10.6",
    "q": "^1.4.1",
    "sinon": "^1.15.1",
    "sinon-as-promised": "^4.0.0",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b0463d7fd3cf5b2fed64500ab6e8b8a49c5b8e6c",
    "tarball": "https://registry.npmjs.org/retry-as-promised/-/retry-as-promised-2.2.0.tgz"
  },
  "gitHead": "b3189fbccfc99e1560596df917ab17f0c2a4009f",
  "homepage": "https://github.com/mickhansen/retry-as-promised",
  "keywords": [
    "retry",
    "promise",
    "bluebird"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mickhansen",
      "email": "mick.kasper.hansen@gmail.com"
    }
  ],
  "name": "retry-as-promised",
  "optionalDependencies": {},
  "readme": "# retry-as-promised\n\n```sh\n$ npm install --save retry-as-promised\n```\n\nRetry a failed promise\n\n```js\nvar retry = require('retry-as-promised');\n\nvar warningFn = function(msg){ someLoggingFunction(msg, 'notice'); };\n\n// Will call the until max retries or the promise is resolved.\nreturn retry(function () {\n  return promise;\n}, {\n  max: 3, // maximum amount of tries\n  timeout: 10000 // throw if no response or error within milisecnd timeout, default: undefined,\n  match: [ // Must match error signature (ala bluebird catch) to continue\n    Sequelize.ConnectionError,\n    'SQLITE_BUSY'\n  ],\n  backoffBase: 1000 // Initial backoff duration in ms. Default: 100,\n  backoffExponent: 1.5 // Exponent to increase backoff each try. Default: 1.1\n  report: warningFn, // the function used for reporting; must have a (string, object) argument signature, where string is the message that will passed in by retry-as-promised, and the object will be this configuration object + the $current property\n  name:  'SourceX' // if user supplies string, it will be used when composing error/reporting messages; else if retry gets a callback, uses callback name in erroring/reporting; else (default) uses litteral string 'unknown'\n});\n```\n\n## Tested with\n\n- Bluebird\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mickhansen/retry-as-promised.git"
  },
  "scripts": {
    "test": "cross-env DEBUG=retry-as-promised,retry-as-promised:* NODE_ENV=test ./node_modules/.bin/mocha --check-leaks --colors -t 10000 --reporter spec test/**/*.test.js test/*.test.js"
  },
  "version": "2.2.0"
}
